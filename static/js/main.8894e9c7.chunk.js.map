{"version":3,"sources":["components/NewTodo/NewTodo.js","components/Todo/Todo.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["NewTodo","state","title","handleChange","event","target","value","setState","handleSubmit","preventDefault","length","todo","id","uuidv4","trim","completed","props","addTodo","this","onSubmit","className","placeholder","name","onChange","React","Component","Todo","toggledCheck","deleteTask","type","checked","htmlFor","onClick","TodoList","todos","map","index","key","App","visibleTodos","filter","prevState","obj","task","Boolean","filtered","getAttribute","clearCompleted","checkedAll","persistedNotes","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","activeTodos","every","cx","selected","data-filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8894e9c7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class NewTodo extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleChange = (event) => {\n    const title = event.target.value;\n\n    this.setState({\n      title,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n\n    if (title.length > 0) {\n      const todo = {\n        id: uuidv4(),\n        title: title.trim(),\n        completed: false,\n      };\n\n      this.props.addTodo(todo);\n\n      this.setState({\n        title: '',\n      });\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          name={title}\n          value={title}\n          onChange={this.handleChange}\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Todo = ({ todo, toggledCheck, deleteTask }) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <li>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          id={id}\n          onChange={event => toggledCheck(event.target.checked)}\n        />\n        <label htmlFor={id}>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteTask}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  toggledCheck: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = ({ todos, toggledCheck, deleteTask }) => (\n  <ul className=\"todo-list\">\n    {todos.map((todo, index) => (\n      <Todo\n        key={todo.id}\n        todo={todo}\n        toggledCheck={checked => toggledCheck(todo.id, checked)}\n        deleteTask={() => deleteTask(todo.id)}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  toggledCheck: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport * as cx from 'classnames';\n\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport class App extends Component {\n  state = {\n    todos: [],\n    visibleTodos: [],\n    filter: 'All',\n  }\n\n  componentDidMount() {\n    const persistedNotes = localStorage.getItem('todos');\n\n    if (persistedNotes.length > 0) {\n      const todos = JSON.parse(persistedNotes);\n\n      this.setState({ todos });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todos !== this.state.todos) {\n      localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    }\n  }\n\n  addTodo = (todo) => {\n    const { filter, todos } = this.state;\n\n    this.setState((prevState) => {\n      const obj = {\n        todos: [...todos, todo],\n      };\n\n      return {\n        todos: obj.todos,\n        visibleTodos: filter === 'All'\n          ? obj.todos\n          : obj.todos.filter(task => task.completed === Boolean(filter)),\n      };\n    });\n  }\n\n  toggledCheck = (id, checked) => {\n    const { filter } = this.state;\n\n    this.setState((prevState) => {\n      const obj = {\n        todos: prevState.todos.map(todo => (\n          todo.id === id\n            ? {\n              ...todo, completed: checked,\n            }\n            : todo\n        )),\n      };\n\n      return {\n        todos: obj.todos,\n        visibleTodos: filter === 'All'\n          ? obj.todos\n          : obj.todos.filter(task => task.completed === Boolean(filter)),\n      };\n    });\n  }\n\n  filtered = (event) => {\n    let filter = event.target.getAttribute('data-filter');\n\n    switch (filter) {\n      case 'Active':\n        filter = false;\n        break;\n\n      case 'Completed':\n        filter = true;\n        break;\n      default:\n        filter = 'All';\n        break;\n    }\n\n    this.setState(prevState => ({\n      visibleTodos: filter === 'All'\n        ? prevState.todos\n        : prevState.todos.filter(todo => todo.completed === Boolean(filter)),\n      filter,\n    }));\n  }\n\n  deleteTask = (id) => {\n    const { filter } = this.state;\n\n    this.setState((prevState) => {\n      const obj = {\n        todos: prevState.todos.filter(todo => todo.id !== id),\n      };\n\n      return {\n        todos: obj.todos,\n        visibleTodos: filter === 'All'\n          ? obj.todos\n          : obj.todos.filter(task => task.completed === Boolean(filter)),\n      };\n    });\n  }\n\n  clearCompleted = () => {\n    this.setState((prevState) => {\n      const obj = {\n        todos: prevState.todos.filter(todo => !todo.completed),\n      };\n\n      return {\n        todos: obj.todos,\n        visibleTodos: obj.todos,\n      };\n    });\n  }\n\n  checkedAll = (event) => {\n    if (event.target.checked) {\n      this.setState((prevState) => {\n        const obj = {\n          todos: prevState.todos.map(todo => (\n            {\n              ...todo,\n              completed: true,\n            }\n          )),\n        };\n\n        return {\n          todos: obj.todos,\n          visibleTodos: obj.todos,\n        };\n      });\n    } else {\n      this.setState((prevState) => {\n        const obj = {\n          todos: prevState.todos.map(todo => (\n            {\n              ...todo,\n              completed: false,\n            }\n          )),\n        };\n\n        return {\n          todos: obj.todos,\n          visibleTodos: obj.todos,\n        };\n      });\n    }\n  }\n\n  render() {\n    const { todos, visibleTodos, filter } = this.state;\n    const activeTodos = todos.filter(todo => !todo.completed);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addTodo={this.addTodo} />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={todos.length && todos.every(todo => todo.completed)}\n            onChange={this.checkedAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={visibleTodos}\n            toggledCheck={this.toggledCheck}\n            deleteTask={this.deleteTask}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {activeTodos.length}\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <button\n                type=\"button\"\n                className={\n                  cx({ selected: filter === 'All' })\n                }\n                data-filter=\"All\"\n                onClick={this.filtered}\n              >\n                All\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                className={\n                  cx({ selected: filter === false })\n                }\n                data-filter=\"Active\"\n                onClick={this.filtered}\n              >\n                Active\n              </button>\n            </li>\n\n            <li>\n              <button\n                type=\"button\"\n                className={\n                  cx({ selected: filter === true })\n                }\n                data-filter=\"Completed\"\n                onClick={this.filtered}\n              >\n                Completed\n              </button>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.clearCompleted}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.scss';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}