{"version":3,"sources":["components/NewTodo/NewTodo.js","components/Todo/Todo.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["uuidv4","require","NewTodo","state","title","id","complited","handleChange","event","target","value","setState","handleKeyPress","key","todo","completed","props","addTodo","this","className","placeholder","name","onChange","onKeyPress","React","Component","Todo","toggledCheck","deleteTask","console","log","type","onClick","htmlFor","TodoList","todos","showWords","map","index","App","allTodos","prevState","filtered","filter","getAttribute","Boolean","clearedCompleted","checkedAll","checked","persistedNotes","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","leftList","length","href","data-filter","ReactDOM","render","document","getElementById"],"mappings":"+SAGMA,EAASC,EAAQ,IAEVC,EAAb,2MACEC,MAAQ,CACNC,MAAO,GACPC,GAAI,GACJC,WAAW,GAJf,EAOEC,aAAe,SAACC,GACd,IAAMJ,EAAQI,EAAMC,OAAOC,MAE3B,EAAKC,SAAS,CACZP,WAXN,EAeEQ,eAAiB,SAACJ,GAAW,IACnBJ,EAAU,EAAKD,MAAfC,MAER,GAAkB,UAAdI,EAAMK,IAAiB,CACzB,IAAMC,EAAO,CACXT,GAAIL,IACJI,QACAW,WAAW,GAGb,EAAKC,MAAMC,QAAQH,GAEnB,EAAKH,SAAS,CACZP,MAAO,GACPC,GAAI,GACJC,WAAW,MA9BnB,wEAmCY,IACAF,EAAUc,KAAKf,MAAfC,MAER,OACE,2BACEe,UAAU,WACVC,YAAY,yBACZC,KAAMjB,EACNM,MAAON,EACPkB,SAAUJ,KAAKX,aACfgB,WAAYL,KAAKN,qBA7CzB,GAA6BY,IAAMC,WCFtBC,EAAO,SAAC,GAAwC,IAAtCZ,EAAqC,EAArCA,KAAMa,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACnCvB,EAAyBS,EAAzBT,GAAID,EAAqBU,EAArBV,MAAOW,EAAcD,EAAdC,UAGjB,OAFFc,QAAQC,IAAIf,GAGR,4BACE,yBAAKI,UAAU,QACb,2BAAOY,KAAK,WAAWZ,UAAU,SAASd,GAAIA,EAAI2B,QAASL,IAC3D,2BAAOM,QAAS5B,GAAKD,GACrB,4BAAQ2B,KAAK,SAASZ,UAAU,UAAUa,QAASJ,KAErD,2BAAOG,KAAK,OAAOZ,UAAU,WCVtBe,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOR,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,WAAxB,EAAoCQ,UAApC,OACtB,wBAAIjB,UAAU,aACXgB,EAAME,KAAI,SAACvB,EAAMwB,GAAP,OAAiB,kBAAC,EAAD,CAAMzB,IAAKC,EAAKT,GAAIS,KAAMA,EAAMa,aAAc,kBAAMA,EAAab,EAAKT,KAAKuB,WAAY,kBAAMA,EAAWd,EAAKT,YCFhIkC,EAAb,2MACEpC,MAAQ,CACNgC,MAAO,GACPK,SAAU,IAHd,EAsBEvB,QAAU,SAACH,GACT,EAAKH,UAAS,SAAA8B,GAAS,MAAK,CAC1BN,MAAM,GAAD,mBACAM,EAAUN,OADV,CAEHrB,IAEF0B,SAAS,GAAD,mBACHC,EAAUN,OADP,CAENrB,SA9BR,EAmCEa,aAAe,SAACtB,GACd,EAAKM,UAAS,SAAA8B,GAAS,MAAK,CAC1BN,MAAOM,EAAUN,MAAME,KAAI,SAAAvB,GAAI,OAC7BA,EAAKT,KAAOA,EAAZ,eAEOS,EAFP,CAEaC,WAAYD,EAAKC,YAE1BD,KAEN0B,SAAUC,EAAUD,SAASH,KAAI,SAAAvB,GAAI,OACnCA,EAAKT,KAAOA,EAAZ,eAEOS,EAFP,CAEaC,WAAYD,EAAKC,YAE1BD,UAjDZ,EAsDE4B,SAAW,SAAClC,GACV,IAAImC,EAASnC,EAAMC,OAAOmC,aAAa,eAExB,WAAXD,IACFA,GAAS,GAGI,cAAXA,IACFA,GAAS,GAGX,EAAKhC,UAAS,SAAA8B,GAAS,MAAK,CAC1BD,SAAqB,QAAXG,EAAmBF,EAAUN,MAAQM,EAAUN,MAAMQ,QAAO,SAAA7B,GAAI,OAAIA,EAAKC,YAAc8B,QAAQF,WAlE/G,EAsEEf,WAAa,SAACvB,GACZ,EAAKM,UAAS,SAAA8B,GAAS,MAAK,CAC1BD,SAAUC,EAAUD,SAASG,QAAO,SAAA7B,GAAI,OAAIA,EAAKT,KAAOA,KACxD8B,MAAOM,EAAUN,MAAMQ,QAAO,SAAA7B,GAAI,OAAIA,EAAKT,KAAOA,UAzExD,EA6EEyC,iBAAmB,WACjB,EAAKnC,UAAS,SAAA8B,GAAS,MAAK,CAC1BD,SAAUC,EAAUD,SAASG,QAAO,SAAA7B,GAAI,OAAuB,IAAnBA,EAAKC,aACjDoB,MAAOM,EAAUN,MAAMQ,QAAO,SAAA7B,GAAI,OAAuB,IAAnBA,EAAKC,kBAhFjD,EAoFEgC,WAAa,SAACvC,GACRA,EAAMC,OAAOuC,QACf,EAAKrC,UAAS,SAAA8B,GAAS,MAAK,CAC1BN,MAAOM,EAAUN,MAAME,KAAI,SAAAvB,GAAI,sBAExBA,EAFwB,CAG3BC,WAAW,OAGfyB,SAAUC,EAAUD,SAASH,KAAI,SAAAvB,GAAI,sBAE9BA,EAF8B,CAGjCC,WAAW,WAKjB,EAAKJ,UAAS,SAAA8B,GAAS,MAAK,CAC1BN,MAAOM,EAAUN,MAAME,KAAI,SAAAvB,GAAI,sBAExBA,EAFwB,CAG3BC,WAAW,OAGfyB,SAAUC,EAAUD,SAASH,KAAI,SAAAvB,GAAI,sBAE9BA,EAF8B,CAGjCC,WAAW,YA/GvB,mFAOI,IAAMkC,EAAiBC,aAAaC,QAAQ,SAE5C,GAAIF,EAAgB,CAClB,IAAMd,EAAQiB,KAAKC,MAAMJ,GAEzB/B,KAAKP,SAAS,CAAEwB,aAZtB,yCAgBqBmB,EAAWb,GACxBA,EAAUN,QAAUjB,KAAKf,MAAMgC,OACjCe,aAAaK,QAAQ,QAASH,KAAKI,UAAUtC,KAAKf,MAAMgC,UAlB9D,+BAsHY,IAAD,EACqBjB,KAAKf,MAAzBgC,EADD,EACCA,MAAOK,EADR,EACQA,SACTiB,EAAWtB,EAAMQ,QAAO,SAAA7B,GAAI,OAAuB,IAAnBA,EAAKC,aAG3C,OAFAc,QAAQC,IAAIU,GAGV,6BAASrB,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,kBAAC,EAAD,CAASF,QAASC,KAAKD,WAGzB,6BAASE,UAAU,QACjB,2BAAOY,KAAK,WAAW1B,GAAG,aAAac,UAAU,aAAaG,SAAUJ,KAAK6B,aAC7E,2BAAOd,QAAQ,cAAf,wBACA,kBAAC,EAAD,CACEE,MAAOK,EACPb,aAAcT,KAAKS,aACnBC,WAAYV,KAAKU,cAIrB,4BAAQT,UAAU,UAChB,0BAAMA,UAAU,cACbsC,EAASC,OADZ,cAKA,wBAAIvC,UAAU,WACZ,4BACE,uBAAGwC,KAAK,KAAKxC,UAAU,WAAWyC,cAAY,MAAM5B,QAASd,KAAKwB,UAAlE,QAGF,4BACE,uBAAGiB,KAAK,WAAWC,cAAY,SAAS5B,QAASd,KAAKwB,UAAtD,WAGF,4BACE,uBAAGiB,KAAK,cAAcC,cAAY,YAAY5B,QAASd,KAAKwB,UAA5D,eAIJ,4BAAQX,KAAK,SAASZ,UAAU,kBAAkBa,QAASd,KAAK4B,kBAAhE,yBAhKV,GAAyBrB,aCEzBoC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.27636134.chunk.js","sourcesContent":["import React from 'react';\n// import uuid from 'uuid/v4';\n\nconst uuidv4 = require('uuid/v4');\n\nexport class NewTodo extends React.Component {\n  state = {\n    title: '',\n    id: '',\n    complited: false,\n  }\n\n  handleChange = (event) => {\n    const title = event.target.value;\n\n    this.setState({\n      title,\n    });\n  }\n\n  handleKeyPress = (event) => {\n    const { title } = this.state;\n\n    if (event.key === 'Enter') {\n      const todo = {\n        id: uuidv4(),\n        title,\n        completed: false,\n      };\n\n      this.props.addTodo(todo);\n\n      this.setState({\n        title: '',\n        id: '',\n        complited: false,\n      })\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        name={title}\n        value={title}\n        onChange={this.handleChange}\n        onKeyPress={this.handleKeyPress}\n\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Todo = ({ todo, toggledCheck, deleteTask }) => {\nconst { id, title, completed } = todo;\nconsole.log(completed);\n\n  return (\n    <li>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" id={id} onClick={toggledCheck} />\n        <label htmlFor={id}>{title}</label>\n        <button type=\"button\" className=\"destroy\" onClick={deleteTask} />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  toggledCheck: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = ({ todos, toggledCheck, deleteTask, showWords }) => (\n  <ul className=\"todo-list\">\n    {todos.map((todo, index) => <Todo key={todo.id} todo={todo} toggledCheck={() => toggledCheck(todo.id)} deleteTask={() => deleteTask(todo.id)} />)}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      completed: PropTypes.bull,\n    }).isRequired,\n  ).isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  toggledCheck: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport class App extends Component {\n  state = {\n    todos: [],\n    allTodos: [],\n  }\n\n  componentDidMount() {\n    const persistedNotes = localStorage.getItem('todos');\n\n    if (persistedNotes) {\n      const todos = JSON.parse(persistedNotes);\n\n      this.setState({ todos });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todos !== this.state.todos) {\n      localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    }\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n      allTodos: [\n        ...prevState.todos,\n        todo,\n      ],\n    }));\n  }\n\n  toggledCheck = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        todo.id === id\n          ? {\n            ...todo, completed: !todo.completed,\n          }\n          : todo\n      )),\n      allTodos: prevState.allTodos.map(todo => (\n        todo.id === id\n          ? {\n            ...todo, completed: !todo.completed,\n          }\n          : todo\n      )),\n    }));\n  }\n\n  filtered = (event) => {\n    let filter = event.target.getAttribute('data-filter');\n\n    if (filter === 'Active') {\n      filter = false;\n    }\n\n    if (filter === 'Completed') {\n      filter = true;\n    }\n\n    this.setState(prevState => ({\n      allTodos: filter === 'All' ? prevState.todos : prevState.todos.filter(todo => todo.completed === Boolean(filter)),\n    }));\n  }\n\n  deleteTask = (id) => {\n    this.setState(prevState => ({\n      allTodos: prevState.allTodos.filter(todo => todo.id !== id),\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  clearedCompleted = () => {\n    this.setState(prevState => ({\n      allTodos: prevState.allTodos.filter(todo => todo.completed === false),\n      todos: prevState.todos.filter(todo => todo.completed === false),\n    }));\n  }\n\n  checkedAll = (event) => {\n    if (event.target.checked) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => (\n          {\n            ...todo,\n            completed: true,\n          }\n        )),\n        allTodos: prevState.allTodos.map(todo => (\n          {\n            ...todo,\n            completed: true,\n          }\n        )),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => (\n          {\n            ...todo,\n            completed: false,\n          }\n        )),\n        allTodos: prevState.allTodos.map(todo => (\n          {\n            ...todo,\n            completed: false,\n          }\n        )),\n      }));\n    }\n  }\n\n  render() {\n    const { todos, allTodos } = this.state;\n    const leftList = todos.filter(todo => todo.completed === false);\n    console.log(allTodos);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addTodo={this.addTodo} />\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" onChange={this.checkedAll} />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={allTodos}\n            toggledCheck={this.toggledCheck}\n            deleteTask={this.deleteTask}\n          />\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {leftList.length}\n             items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\" data-filter=\"All\" onClick={this.filtered}>All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\" data-filter=\"Active\" onClick={this.filtered}>Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\" data-filter=\"Completed\" onClick={this.filtered}>Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\" onClick={this.clearedCompleted}>\n           Clear completed\n          </button>\n        </footer>\n      </section>\n\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.scss';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}